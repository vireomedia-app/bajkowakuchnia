"use strict";(()=>{var t={};t.id=9684,t.ids=[9684],t.modules={53524:t=>{t.exports=require("@prisma/client")},20399:t=>{t.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:t=>{t.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},55315:t=>{t.exports=require("path")},40892:(t,a,e)=>{e.r(a),e.d(a,{originalPathname:()=>k,patchFetch:()=>z,requestAsyncStorage:()=>f,routeModule:()=>w,serverHooks:()=>g,staticGenerationAsyncStorage:()=>h});var r={};e.r(r),e.d(r,{GET:()=>p,POST:()=>m,dynamic:()=>l});var n=e(79182),o=e(72007),i=e(56719),c=e(93442),u=e(74010),s=e(23381),d=e(91209);let l="force-dynamic";async function p(t){try{let t=await (0,u.Xp)();return c.NextResponse.json(t,{status:200,headers:{"Cache-Control":"no-store, no-cache, must-revalidate"}})}catch(t){return console.error("Error fetching products:",t),c.NextResponse.json({error:"Błąd serwera podczas pobierania produkt\xf3w"},{status:500})}}let y=d.z.object({name:d.z.string().min(1,"Nazwa produktu jest wymagana"),unit:d.z.string().min(1,"Jednostka miary jest wymagana"),initialStock:d.z.number().min(0,"Stan początkowy nie może być ujemny"),manufacturer:d.z.string().nullable().optional(),calories:d.z.number().nullable().optional(),salt:d.z.number().nullable().optional(),protein:d.z.number().nullable().optional(),fat:d.z.number().nullable().optional(),saturatedFat:d.z.number().nullable().optional(),carbohydrates:d.z.number().nullable().optional(),sugars:d.z.number().nullable().optional(),calcium:d.z.number().nullable().optional(),iron:d.z.number().nullable().optional(),vitaminC:d.z.number().nullable().optional(),allergens:d.z.array(d.z.number().min(1).max(14)).optional().default([])});async function m(t){try{let a=await t.json(),e=y.parse(a);await (0,s.id)("Przed dodaniem produktu"),await (0,s.aC)(50);let r=await (0,u.ry)(e);return c.NextResponse.json(r,{status:201})}catch(t){if(console.error("Error creating product:",t),t instanceof d.z.ZodError)return c.NextResponse.json({error:"Nieprawidłowe dane",details:t.errors},{status:400});if(t instanceof Error&&t.message.includes("Unique constraint"))return c.NextResponse.json({error:"Produkt o tej nazwie już istnieje"},{status:409});return c.NextResponse.json({error:"Błąd serwera podczas tworzenia produktu"},{status:500})}}let w=new n.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/products/route",pathname:"/api/products",filename:"route",bundlePath:"app/api/products/route"},resolvedPagePath:"/home/ubuntu/kartoteka_magazynowa_app/nextjs_space/app/api/products/route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:f,staticGenerationAsyncStorage:h,serverHooks:g}=w,k="/api/products/route";function z(){return(0,i.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:h})}},23381:(t,a,e)=>{e.d(a,{_H:()=>o,aC:()=>c,id:()=>n,pi:()=>i});var r=e(83178);async function n(t){try{let a=await r._.product.findMany({include:{transactions:!0}}),e=await r._.transaction.findMany(),n=await r._.recipe.findMany({include:{ingredients:!0}}),o=await r._.recipeIngredient.findMany(),i={products:a,transactions:e,recipes:n,recipeIngredients:o,timestamp:new Date().toISOString()};return await r._.backup.create({data:{data:JSON.stringify(i),description:t||"Automatyczny backup"}})}catch(t){throw console.error("Error creating backup:",t),t}}async function o(){try{return await r._.backup.findMany({orderBy:{createdAt:"desc"}})}catch(t){throw console.error("Error getting backups:",t),t}}async function i(t){try{let a=await r._.backup.findUnique({where:{id:t}});if(!a)throw Error("Backup not found");let e=JSON.parse(a.data);for(let t of(await r._.recipeIngredient.deleteMany(),await r._.recipe.deleteMany(),await r._.transaction.deleteMany(),await r._.product.deleteMany(),e.products))await r._.product.create({data:{id:t.id,name:t.name,unit:t.unit,currentStock:t.currentStock,manufacturer:t.manufacturer,calories:t.calories,protein:t.protein,fat:t.fat,saturatedFat:t.saturatedFat,carbohydrates:t.carbohydrates,sugars:t.sugars,salt:t.salt,calcium:t.calcium,iron:t.iron,vitaminC:t.vitaminC,createdAt:t.createdAt,updatedAt:t.updatedAt}});for(let t of e.transactions)await r._.transaction.create({data:{id:t.id,productId:t.productId,date:t.date,document:t.document,type:t.type,quantity:t.quantity,balance:t.balance,createdAt:t.createdAt}});if(e.recipes)for(let t of e.recipes)await r._.recipe.create({data:{id:t.id,name:t.name,description:t.description,servings:t.servings,createdAt:t.createdAt,updatedAt:t.updatedAt}});if(e.recipeIngredients)for(let t of e.recipeIngredients)await r._.recipeIngredient.create({data:{id:t.id,recipeId:t.recipeId,productId:t.productId,productName:t.productName,quantity:t.quantity,unit:t.unit}});return{success:!0}}catch(t){throw console.error("Error restoring backup:",t),t}}async function c(t=50){try{let a=await r._.backup.findMany({orderBy:{createdAt:"desc"},select:{id:!0}});if(a.length>t){let e=a.slice(t);await r._.backup.deleteMany({where:{id:{in:e.map(t=>t.id)}}})}}catch(t){throw console.error("Error cleaning up backups:",t),t}}},74010:(t,a,e)=>{e.d(a,{I1:()=>l,Xp:()=>c,_X:()=>d,gk:()=>u,ry:()=>s,vQ:()=>p});var r=e(83178),n=e(12203),o=e(55315),i=e.n(o);async function c(){try{return await r._.product.findMany({orderBy:{name:"asc"},where:{NOT:{name:"Lp."}}})}catch(t){return console.error("Error fetching products:",t),[]}}async function u(t){try{return await r._.product.findUnique({where:{id:t},include:{transactions:{orderBy:{date:"asc"}}}})}catch(t){return console.error("Error fetching product:",t),null}}async function s(t){try{return await r._.$transaction(async a=>{let e=await a.product.create({data:{name:t.name,unit:t.unit,currentStock:t.initialStock,manufacturer:t.manufacturer,calories:t.calories,salt:t.salt,protein:t.protein,fat:t.fat,saturatedFat:t.saturatedFat,carbohydrates:t.carbohydrates,sugars:t.sugars,calcium:t.calcium,iron:t.iron,vitaminC:t.vitaminC}});return t.initialStock>0&&await a.transaction.create({data:{productId:e.id,date:new Date,document:"Stan początkowy",type:"INCOME",quantity:t.initialStock,balance:t.initialStock}}),e})}catch(t){throw console.error("Error creating product:",t),t}}async function d(t,a){try{return await r._.$transaction(async e=>{let r=await e.product.findUnique({where:{id:t}});if(!r)throw Error("Product not found");let n=r.currentStock;if("INCOME"===a.type?n+=a.quantity:n-=a.quantity,n<0)throw Error("Niewystarczający stan magazynowy");let o=await e.transaction.create({data:{productId:t,date:a.date,document:a.document,type:a.type,quantity:a.quantity,balance:n}});return await e.product.update({where:{id:t},data:{currentStock:n}}),o})}catch(t){throw console.error("Error creating transaction:",t),t}}async function l(t){try{return await r._.$transaction(async a=>{let e=await a.transaction.findMany({where:{productId:t},orderBy:{date:"asc"}}),r=0;for(let t of e)"INCOME"===t.type?r+=t.quantity:r-=t.quantity,await a.transaction.update({where:{id:t.id},data:{balance:r}});return await a.product.update({where:{id:t},data:{currentStock:r}}),r})}catch(t){throw console.error("Error recalculating balances:",t),t}}async function p(){try{console.log("\uD83C\uDF31 Rozpoczynam import danych z pliku Excel...");let t=i().join(process.cwd(),"data","Kartoteka_Magazynowa_W_Malej_Kuchni.xlsx"),a=n.pJ(t);console.log("\uD83D\uDCCA Znalezione arkusze:",a.SheetNames);let e=a.SheetNames.find(t=>t.includes("Lista Produkt\xf3w")||t.includes("Arkusz1")||t===a.SheetNames[0])||a.SheetNames[0];console.log(`📋 Przetwarzam gł\xf3wny arkusz: ${e}`);let o=a.Sheets[e],c=n.P6.sheet_to_json(o);console.log(`📦 Znaleziono ${c.length} produkt\xf3w`);for(let t=0;t<c.length;t++){let o=c[t],i=o["Nazwa Produktu"]||o["Nazwa produktu"]||o.Nazwa||o["Product Name"]||o.Name||o.nazwa||Object.values(o).find(t=>"string"==typeof t&&t.length>2),u=o["Jednostka Miary"]||o["Jednostka miary"]||o.Jednostka||o.Unit||o.jednostka||"szt",s=parseFloat(o["Aktualny Stan"]||o.Stan||o.Stock||o.stan||"0")||0;if(!i){console.log(`⚠️  Pominięto wiersz ${t+1} - brak nazwy produktu`);continue}console.log(`➕ Dodaję produkt: ${i} (${u}, stan: ${s})`);let d=await r._.product.create({data:{name:String(i).trim(),unit:String(u).trim(),currentStock:s}}),l=a.SheetNames.find(t=>t.includes(String(i))||String(i).includes(t)||t===String(i));if(l&&l!==e){console.log(`📈 Przetwarzam transakcje dla produktu z arkusza: ${l}`);let t=a.Sheets[l],e=n.P6.sheet_to_json(t),o=0;for(let t of e){let a=t.Data||t.Date||new Date,e=t.Dokument||t.Document||"Import",n=parseFloat(t["Przych\xf3d"]||t.Income||"0")||0,i=parseFloat(t["Rozch\xf3d"]||t.Outcome||"0")||0,c=parseFloat(t.Saldo||t.Balance||"0")||0;0!==c?o=c:o+=n-i,n>0&&await r._.transaction.create({data:{productId:d.id,date:new Date(a),document:String(e),type:"INCOME",quantity:n,balance:o}}),i>0&&await r._.transaction.create({data:{productId:d.id,date:new Date(a),document:String(e),type:"OUTCOME",quantity:i,balance:o}})}o!==s&&await r._.product.update({where:{id:d.id},data:{currentStock:o}}),console.log(`✅ Zaimportowano ${e.length} transakcji dla produktu ${i}`)}else s>0&&await r._.transaction.create({data:{productId:d.id,date:new Date,document:"Stan początkowy",type:"INCOME",quantity:s,balance:s}})}let u=await r._.product.count(),s=await r._.transaction.count();console.log(`🎉 Import zakończony pomyślnie!`),console.log(`📦 Zaimportowano ${u} produkt\xf3w`),console.log(`📈 Zaimportowano ${s} transakcji`)}catch(t){throw console.error("❌ Błąd podczas importu:",t),t}}},83178:(t,a,e)=>{e.d(a,{_:()=>n});var r=e(53524);let n=globalThis.prisma??new r.PrismaClient}};var a=require("../../../webpack-runtime.js");a.C(t);var e=t=>a(a.s=t),r=a.X(0,[4372,7609,2203,1209],()=>e(40892));module.exports=r})();