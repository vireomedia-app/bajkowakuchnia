"use strict";(()=>{var t={};t.id=2218,t.ids=[2218],t.modules={53524:t=>{t.exports=require("@prisma/client")},20399:t=>{t.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:t=>{t.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},55315:t=>{t.exports=require("path")},52926:(t,a,e)=>{e.r(a),e.d(a,{originalPathname:()=>m,patchFetch:()=>h,requestAsyncStorage:()=>p,routeModule:()=>l,serverHooks:()=>y,staticGenerationAsyncStorage:()=>w});var r={};e.r(r),e.d(r,{POST:()=>d});var o=e(79182),n=e(72007),c=e(56719),i=e(93442),s=e(83178),u=e(74010);async function d(){try{return await s._.transaction.deleteMany({}),await s._.product.deleteMany({}),await (0,u.vQ)(),i.NextResponse.json({success:!0,message:"Dane zostały przywr\xf3cone do stanu początkowego"})}catch(t){return console.error("Error restoring backup:",t),i.NextResponse.json({error:"Nie udało się przywr\xf3cić danych"},{status:500})}}let l=new o.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/restore/route",pathname:"/api/restore",filename:"route",bundlePath:"app/api/restore/route"},resolvedPagePath:"/home/ubuntu/kartoteka_magazynowa_app/nextjs_space/app/api/restore/route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:p,staticGenerationAsyncStorage:w,serverHooks:y}=l,m="/api/restore/route";function h(){return(0,c.patchFetch)({serverHooks:y,staticGenerationAsyncStorage:w})}},74010:(t,a,e)=>{e.d(a,{I1:()=>l,Xp:()=>i,_X:()=>d,gk:()=>s,ry:()=>u,vQ:()=>p});var r=e(83178),o=e(12203),n=e(55315),c=e.n(n);async function i(){try{return await r._.product.findMany({orderBy:{name:"asc"},where:{NOT:{name:"Lp."}}})}catch(t){return console.error("Error fetching products:",t),[]}}async function s(t){try{return await r._.product.findUnique({where:{id:t},include:{transactions:{orderBy:{date:"asc"}}}})}catch(t){return console.error("Error fetching product:",t),null}}async function u(t){try{return await r._.$transaction(async a=>{let e=await a.product.create({data:{name:t.name,unit:t.unit,currentStock:t.initialStock,manufacturer:t.manufacturer,calories:t.calories,salt:t.salt,protein:t.protein,fat:t.fat,saturatedFat:t.saturatedFat,carbohydrates:t.carbohydrates,sugars:t.sugars,calcium:t.calcium,iron:t.iron,vitaminC:t.vitaminC}});return t.initialStock>0&&await a.transaction.create({data:{productId:e.id,date:new Date,document:"Stan początkowy",type:"INCOME",quantity:t.initialStock,balance:t.initialStock}}),e})}catch(t){throw console.error("Error creating product:",t),t}}async function d(t,a){try{return await r._.$transaction(async e=>{let r=await e.product.findUnique({where:{id:t}});if(!r)throw Error("Product not found");let o=r.currentStock;if("INCOME"===a.type?o+=a.quantity:o-=a.quantity,o<0)throw Error("Niewystarczający stan magazynowy");let n=await e.transaction.create({data:{productId:t,date:a.date,document:a.document,type:a.type,quantity:a.quantity,balance:o}});return await e.product.update({where:{id:t},data:{currentStock:o}}),n})}catch(t){throw console.error("Error creating transaction:",t),t}}async function l(t){try{return await r._.$transaction(async a=>{let e=await a.transaction.findMany({where:{productId:t},orderBy:{date:"asc"}}),r=0;for(let t of e)"INCOME"===t.type?r+=t.quantity:r-=t.quantity,await a.transaction.update({where:{id:t.id},data:{balance:r}});return await a.product.update({where:{id:t},data:{currentStock:r}}),r})}catch(t){throw console.error("Error recalculating balances:",t),t}}async function p(){try{console.log("\uD83C\uDF31 Rozpoczynam import danych z pliku Excel...");let t=c().join(process.cwd(),"data","Kartoteka_Magazynowa_W_Malej_Kuchni.xlsx"),a=o.pJ(t);console.log("\uD83D\uDCCA Znalezione arkusze:",a.SheetNames);let e=a.SheetNames.find(t=>t.includes("Lista Produkt\xf3w")||t.includes("Arkusz1")||t===a.SheetNames[0])||a.SheetNames[0];console.log(`📋 Przetwarzam gł\xf3wny arkusz: ${e}`);let n=a.Sheets[e],i=o.P6.sheet_to_json(n);console.log(`📦 Znaleziono ${i.length} produkt\xf3w`);for(let t=0;t<i.length;t++){let n=i[t],c=n["Nazwa Produktu"]||n["Nazwa produktu"]||n.Nazwa||n["Product Name"]||n.Name||n.nazwa||Object.values(n).find(t=>"string"==typeof t&&t.length>2),s=n["Jednostka Miary"]||n["Jednostka miary"]||n.Jednostka||n.Unit||n.jednostka||"szt",u=parseFloat(n["Aktualny Stan"]||n.Stan||n.Stock||n.stan||"0")||0;if(!c){console.log(`⚠️  Pominięto wiersz ${t+1} - brak nazwy produktu`);continue}console.log(`➕ Dodaję produkt: ${c} (${s}, stan: ${u})`);let d=await r._.product.create({data:{name:String(c).trim(),unit:String(s).trim(),currentStock:u}}),l=a.SheetNames.find(t=>t.includes(String(c))||String(c).includes(t)||t===String(c));if(l&&l!==e){console.log(`📈 Przetwarzam transakcje dla produktu z arkusza: ${l}`);let t=a.Sheets[l],e=o.P6.sheet_to_json(t),n=0;for(let t of e){let a=t.Data||t.Date||new Date,e=t.Dokument||t.Document||"Import",o=parseFloat(t["Przych\xf3d"]||t.Income||"0")||0,c=parseFloat(t["Rozch\xf3d"]||t.Outcome||"0")||0,i=parseFloat(t.Saldo||t.Balance||"0")||0;0!==i?n=i:n+=o-c,o>0&&await r._.transaction.create({data:{productId:d.id,date:new Date(a),document:String(e),type:"INCOME",quantity:o,balance:n}}),c>0&&await r._.transaction.create({data:{productId:d.id,date:new Date(a),document:String(e),type:"OUTCOME",quantity:c,balance:n}})}n!==u&&await r._.product.update({where:{id:d.id},data:{currentStock:n}}),console.log(`✅ Zaimportowano ${e.length} transakcji dla produktu ${c}`)}else u>0&&await r._.transaction.create({data:{productId:d.id,date:new Date,document:"Stan początkowy",type:"INCOME",quantity:u,balance:u}})}let s=await r._.product.count(),u=await r._.transaction.count();console.log(`🎉 Import zakończony pomyślnie!`),console.log(`📦 Zaimportowano ${s} produkt\xf3w`),console.log(`📈 Zaimportowano ${u} transakcji`)}catch(t){throw console.error("❌ Błąd podczas importu:",t),t}}},83178:(t,a,e)=>{e.d(a,{_:()=>o});var r=e(53524);let o=globalThis.prisma??new r.PrismaClient}};var a=require("../../../webpack-runtime.js");a.C(t);var e=t=>a(a.s=t),r=a.X(0,[4372,7609,2203],()=>e(52926));module.exports=r})();