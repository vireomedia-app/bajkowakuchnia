"use strict";(()=>{var e={};e.id=7322,e.ids=[7322],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},53211:(e,t,a)=>{a.r(t),a.d(t,{originalPathname:()=>y,patchFetch:()=>A,requestAsyncStorage:()=>u,routeModule:()=>p,serverHooks:()=>w,staticGenerationAsyncStorage:()=>m});var r={};a.r(r),a.d(r,{POST:()=>l,dynamic:()=>s});var n=a(79182),d=a(72007),i=a(56719),o=a(93442),c=a(83178);let s="force-dynamic";async function l(e){try{let t;let a=(await e.formData()).get("file");if(!a)return o.NextResponse.json({error:"Nie przesłano pliku"},{status:400});let r=await a.text();try{t=JSON.parse(r)}catch(e){return o.NextResponse.json({error:"Nieprawidłowy format pliku JSON"},{status:400})}if(!t.data||!t.version)return o.NextResponse.json({error:"Nieprawidłowa struktura pliku eksportu"},{status:400});let{products:n=[],transactions:d=[],recipes:i=[],recipeIngredients:s=[],nutritionalStandards:l=[],mealPlans:p=[],mealPlanDays:u=[],mealPlanMeals:m=[],mealPlanRecipes:w=[]}=t.data;return await c._.$transaction(async e=>{for(let t of(await e.mealPlanRecipe.deleteMany(),await e.mealPlanMeal.deleteMany(),await e.mealPlanDay.deleteMany(),await e.mealPlan.deleteMany(),await e.nutritionalStandards.deleteMany(),await e.recipeIngredient.deleteMany(),await e.recipe.deleteMany(),await e.transaction.deleteMany(),await e.product.deleteMany(),n))await e.product.create({data:{id:t.id,name:t.name,unit:t.unit,currentStock:t.currentStock||0,manufacturer:t.manufacturer,calories:t.calories,salt:t.salt,protein:t.protein,fat:t.fat,saturatedFat:t.saturatedFat,carbohydrates:t.carbohydrates,sugars:t.sugars,calcium:t.calcium,iron:t.iron,vitaminC:t.vitaminC,allergens:t.allergens||[],createdAt:t.createdAt?new Date(t.createdAt):void 0,updatedAt:t.updatedAt?new Date(t.updatedAt):void 0}});for(let t of d)await e.transaction.create({data:{id:t.id,productId:t.productId,date:new Date(t.date),document:t.document,type:t.type,quantity:t.quantity,balance:t.balance,createdAt:t.createdAt?new Date(t.createdAt):void 0}});for(let t of i)await e.recipe.create({data:{id:t.id,name:t.name,description:t.description,servings:t.servings||1,mealType:t.mealType,categories:t.categories||[],createdAt:t.createdAt?new Date(t.createdAt):void 0,updatedAt:t.updatedAt?new Date(t.updatedAt):void 0}});for(let t of s)await e.recipeIngredient.create({data:{id:t.id,recipeId:t.recipeId,productId:t.productId,productName:t.productName,quantity:t.quantity,unit:t.unit}});for(let t of l)await e.nutritionalStandards.create({data:{id:t.id,name:t.name,energyMin:t.energyMin,energyMax:t.energyMax,proteinPercentMin:t.proteinPercentMin,proteinPercentMax:t.proteinPercentMax,fatPercentMin:t.fatPercentMin,fatPercentMax:t.fatPercentMax,carbohydratesPercentMin:t.carbohydratesPercentMin,carbohydratesPercentMax:t.carbohydratesPercentMax,calcium:t.calcium,iron:t.iron,vitaminC:t.vitaminC,createdAt:t.createdAt?new Date(t.createdAt):void 0,updatedAt:t.updatedAt?new Date(t.updatedAt):void 0}});for(let t of p)await e.mealPlan.create({data:{id:t.id,name:t.name,weekNumber:t.weekNumber,season:t.season,description:t.description,standardsId:t.standardsId,createdAt:t.createdAt?new Date(t.createdAt):void 0,updatedAt:t.updatedAt?new Date(t.updatedAt):void 0}});for(let t of u)await e.mealPlanDay.create({data:{id:t.id,mealPlanId:t.mealPlanId,dayOfWeek:t.dayOfWeek,date:t.date?new Date(t.date):null,createdAt:t.createdAt?new Date(t.createdAt):void 0,updatedAt:t.updatedAt?new Date(t.updatedAt):void 0}});for(let t of m)await e.mealPlanMeal.create({data:{id:t.id,mealPlanDayId:t.mealPlanDayId,mealType:t.mealType,order:t.order||0,createdAt:t.createdAt?new Date(t.createdAt):void 0,updatedAt:t.updatedAt?new Date(t.updatedAt):void 0}});for(let t of w)await e.mealPlanRecipe.create({data:{id:t.id,mealPlanMealId:t.mealPlanMealId,recipeId:t.recipeId,servings:t.servings||1,order:t.order||0,createdAt:t.createdAt?new Date(t.createdAt):void 0}})}),o.NextResponse.json({success:!0,message:"Dane zostały pomyślnie zaimportowane",stats:{productsCount:n.length,transactionsCount:d.length,recipesCount:i.length,recipeIngredientsCount:s.length,nutritionalStandardsCount:l.length,mealPlansCount:p.length,mealPlanDaysCount:u.length,mealPlanMealsCount:m.length,mealPlanRecipesCount:w.length}})}catch(e){return console.error("Error importing data:",e),o.NextResponse.json({error:"Błąd podczas importowania danych",details:e instanceof Error?e.message:"Unknown error"},{status:500})}}let p=new n.AppRouteRouteModule({definition:{kind:d.x.APP_ROUTE,page:"/api/data/import/route",pathname:"/api/data/import",filename:"route",bundlePath:"app/api/data/import/route"},resolvedPagePath:"/home/ubuntu/kartoteka_magazynowa_app/nextjs_space/app/api/data/import/route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:u,staticGenerationAsyncStorage:m,serverHooks:w}=p,y="/api/data/import/route";function A(){return(0,i.patchFetch)({serverHooks:w,staticGenerationAsyncStorage:m})}},83178:(e,t,a)=>{a.d(t,{_:()=>n});var r=a(53524);let n=globalThis.prisma??new r.PrismaClient}};var t=require("../../../../webpack-runtime.js");t.C(e);var a=e=>t(t.s=e),r=t.X(0,[4372,7609],()=>a(53211));module.exports=r})();