"use strict";(()=>{var e={};e.id=9256,e.ids=[9256],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},10222:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>f,patchFetch:()=>m,requestAsyncStorage:()=>p,routeModule:()=>u,serverHooks:()=>y,staticGenerationAsyncStorage:()=>l});var a={};r.r(a),r.d(a,{POST:()=>d});var i=r(79182),n=r(72007),c=r(56719),o=r(93442),s=r(23381);async function d(e){try{let{backupId:t}=await e.json();if(!t)return o.NextResponse.json({error:"Backup ID is required"},{status:400});return await (0,s.pi)(t),o.NextResponse.json({success:!0})}catch(e){return console.error("Error restoring backup:",e),o.NextResponse.json({error:"Failed to restore backup"},{status:500})}}let u=new i.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/backups/restore/route",pathname:"/api/backups/restore",filename:"route",bundlePath:"app/api/backups/restore/route"},resolvedPagePath:"/home/ubuntu/kartoteka_magazynowa_app/nextjs_space/app/api/backups/restore/route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:p,staticGenerationAsyncStorage:l,serverHooks:y}=u,f="/api/backups/restore/route";function m(){return(0,c.patchFetch)({serverHooks:y,staticGenerationAsyncStorage:l})}},23381:(e,t,r)=>{r.d(t,{_H:()=>n,aC:()=>o,id:()=>i,pi:()=>c});var a=r(83178);async function i(e){try{let t=await a._.product.findMany({include:{transactions:!0}}),r=await a._.transaction.findMany(),i=await a._.recipe.findMany({include:{ingredients:!0}}),n=await a._.recipeIngredient.findMany(),c={products:t,transactions:r,recipes:i,recipeIngredients:n,timestamp:new Date().toISOString()};return await a._.backup.create({data:{data:JSON.stringify(c),description:e||"Automatyczny backup"}})}catch(e){throw console.error("Error creating backup:",e),e}}async function n(){try{return await a._.backup.findMany({orderBy:{createdAt:"desc"}})}catch(e){throw console.error("Error getting backups:",e),e}}async function c(e){try{let t=await a._.backup.findUnique({where:{id:e}});if(!t)throw Error("Backup not found");let r=JSON.parse(t.data);for(let e of(await a._.recipeIngredient.deleteMany(),await a._.recipe.deleteMany(),await a._.transaction.deleteMany(),await a._.product.deleteMany(),r.products))await a._.product.create({data:{id:e.id,name:e.name,unit:e.unit,currentStock:e.currentStock,manufacturer:e.manufacturer,calories:e.calories,protein:e.protein,fat:e.fat,saturatedFat:e.saturatedFat,carbohydrates:e.carbohydrates,sugars:e.sugars,salt:e.salt,calcium:e.calcium,iron:e.iron,vitaminC:e.vitaminC,createdAt:e.createdAt,updatedAt:e.updatedAt}});for(let e of r.transactions)await a._.transaction.create({data:{id:e.id,productId:e.productId,date:e.date,document:e.document,type:e.type,quantity:e.quantity,balance:e.balance,createdAt:e.createdAt}});if(r.recipes)for(let e of r.recipes)await a._.recipe.create({data:{id:e.id,name:e.name,description:e.description,servings:e.servings,createdAt:e.createdAt,updatedAt:e.updatedAt}});if(r.recipeIngredients)for(let e of r.recipeIngredients)await a._.recipeIngredient.create({data:{id:e.id,recipeId:e.recipeId,productId:e.productId,productName:e.productName,quantity:e.quantity,unit:e.unit}});return{success:!0}}catch(e){throw console.error("Error restoring backup:",e),e}}async function o(e=50){try{let t=await a._.backup.findMany({orderBy:{createdAt:"desc"},select:{id:!0}});if(t.length>e){let r=t.slice(e);await a._.backup.deleteMany({where:{id:{in:r.map(e=>e.id)}}})}}catch(e){throw console.error("Error cleaning up backups:",e),e}}},83178:(e,t,r)=>{r.d(t,{_:()=>i});var a=r(53524);let i=globalThis.prisma??new a.PrismaClient}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[4372,7609],()=>r(10222));module.exports=a})();