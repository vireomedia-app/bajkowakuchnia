"use strict";(()=>{var e={};e.id=8396,e.ids=[8396],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},97851:(e,t,a)=>{a.r(t),a.d(t,{originalPathname:()=>m,patchFetch:()=>w,requestAsyncStorage:()=>l,routeModule:()=>p,serverHooks:()=>f,staticGenerationAsyncStorage:()=>y});var r={};a.r(r),a.d(r,{GET:()=>s,POST:()=>u});var n=a(79182),i=a(72007),c=a(56719),o=a(93442),d=a(23381);async function s(){try{let e=await (0,d._H)();return o.NextResponse.json(e)}catch(e){return console.error("Error fetching backups:",e),o.NextResponse.json({error:"Failed to fetch backups"},{status:500})}}async function u(e){try{let{description:t}=await e.json(),a=await (0,d.id)(t);return o.NextResponse.json(a)}catch(e){return console.error("Error creating backup:",e),o.NextResponse.json({error:"Failed to create backup"},{status:500})}}let p=new n.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/backups/route",pathname:"/api/backups",filename:"route",bundlePath:"app/api/backups/route"},resolvedPagePath:"/home/ubuntu/kartoteka_magazynowa_app/nextjs_space/app/api/backups/route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:l,staticGenerationAsyncStorage:y,serverHooks:f}=p,m="/api/backups/route";function w(){return(0,c.patchFetch)({serverHooks:f,staticGenerationAsyncStorage:y})}},23381:(e,t,a)=>{a.d(t,{_H:()=>i,aC:()=>o,id:()=>n,pi:()=>c});var r=a(83178);async function n(e){try{let t=await r._.product.findMany({include:{transactions:!0}}),a=await r._.transaction.findMany(),n=await r._.recipe.findMany({include:{ingredients:!0}}),i=await r._.recipeIngredient.findMany(),c={products:t,transactions:a,recipes:n,recipeIngredients:i,timestamp:new Date().toISOString()};return await r._.backup.create({data:{data:JSON.stringify(c),description:e||"Automatyczny backup"}})}catch(e){throw console.error("Error creating backup:",e),e}}async function i(){try{return await r._.backup.findMany({orderBy:{createdAt:"desc"}})}catch(e){throw console.error("Error getting backups:",e),e}}async function c(e){try{let t=await r._.backup.findUnique({where:{id:e}});if(!t)throw Error("Backup not found");let a=JSON.parse(t.data);for(let e of(await r._.recipeIngredient.deleteMany(),await r._.recipe.deleteMany(),await r._.transaction.deleteMany(),await r._.product.deleteMany(),a.products))await r._.product.create({data:{id:e.id,name:e.name,unit:e.unit,currentStock:e.currentStock,manufacturer:e.manufacturer,calories:e.calories,protein:e.protein,fat:e.fat,saturatedFat:e.saturatedFat,carbohydrates:e.carbohydrates,sugars:e.sugars,salt:e.salt,calcium:e.calcium,iron:e.iron,vitaminC:e.vitaminC,createdAt:e.createdAt,updatedAt:e.updatedAt}});for(let e of a.transactions)await r._.transaction.create({data:{id:e.id,productId:e.productId,date:e.date,document:e.document,type:e.type,quantity:e.quantity,balance:e.balance,createdAt:e.createdAt}});if(a.recipes)for(let e of a.recipes)await r._.recipe.create({data:{id:e.id,name:e.name,description:e.description,servings:e.servings,createdAt:e.createdAt,updatedAt:e.updatedAt}});if(a.recipeIngredients)for(let e of a.recipeIngredients)await r._.recipeIngredient.create({data:{id:e.id,recipeId:e.recipeId,productId:e.productId,productName:e.productName,quantity:e.quantity,unit:e.unit}});return{success:!0}}catch(e){throw console.error("Error restoring backup:",e),e}}async function o(e=50){try{let t=await r._.backup.findMany({orderBy:{createdAt:"desc"},select:{id:!0}});if(t.length>e){let a=t.slice(e);await r._.backup.deleteMany({where:{id:{in:a.map(e=>e.id)}}})}}catch(e){throw console.error("Error cleaning up backups:",e),e}}},83178:(e,t,a)=>{a.d(t,{_:()=>n});var r=a(53524);let n=globalThis.prisma??new r.PrismaClient}};var t=require("../../../webpack-runtime.js");t.C(e);var a=e=>t(t.s=e),r=t.X(0,[4372,7609],()=>a(97851));module.exports=r})();